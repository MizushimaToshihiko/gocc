#include <stdarg.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>
#include <string.h>

#define ASSERT(x, y) assert(x, y, #y)

void assert(int expected, int actual, char *code) {
  if (expected == actual) {
    printf("%s => %d\n", code, actual);
  } else {
    printf("%s => %d expected but got %d\n", code, expected, actual);
    exit(1);
  }
}

void println(char *fmt, ...) {
  va_list ap;
  va_start(ap, fmt);
  printf(fmt, ap);
  printf("\n");
}

int falseFn() { return 512; }
int trueFn() { return 513; }
int charFn() { return (2<<8)+3; }
int shortFn() { return (2<<16)+5; }

int addAll(int n, ...) {
  va_list ap;
  va_start(ap, n);

  int sum = 0;
  for (int i=0; i<n; i++) {
    sum += va_arg(ap, int);
  }
  return sum;
}

float add_float(float x, float y) {
  return x + y;
}

double add_double(double x, double y) {
  return x + y;
}

int add10_int(int x1, int x2, int x3, int x4, int x5, int x6, int x7, int x8, int x9, int x10) {
  return x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10;
}

float add10_float(float x1, float x2, float x3, float x4, float x5, float x6, float x7, float x8, float x9, float x10) {
  return x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10;
}

double add10_double(double x1, double x2, double x3, double x4, double x5, double x6, double x7, double x8, double x9, double x10) {
  return x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10;
}