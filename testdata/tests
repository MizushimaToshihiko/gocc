var g1 int
var g2 [4]int

func assert(want int, ac int, code *byte) int {
	if want == ac {
		printf("%s => %d\n", code, ac)
	} else {
		printf("%s => %d expeted but got %d\n", code, want, ac)
		exit(1)
	}
}

func ret3() int {
	return 3
	return 5
}

func add2(x int, y int) int {
	return x + y
}

func sub2(x int, y int) int {
	return x - y
}

func add6(a int, b int, c int, d int, e int, f int) int {
	return a + b + c + d + e + f
}

func addx(x *int, y int) int {
	return *x + y
}

func subChar(a byte, b byte, c byte) int {
	return a - b - c
}


// 	"1":  {0, "func main() int {\n\treturn 0\n}"},
// 	"2":  {42, "func main() int {\n\treturn 42\n}"},
// 	"3":  {21, "func main() int {\n\treturn 5+20-4\n}"},
// 	"4":  {41, "func main() int {\n\treturn  12 + 34 - 5\n}"},
// 	"5":  {47, "func main() int {\n\treturn 5+6*7\n}"},
// 	"6":  {15, "func main() int {\n\treturn 5*(9-6)\n}"},
// 	"7":  {4, "func main() int {\n\treturn (3+5)/2\n}"},
// 	"8":  {10, "func main() int {\n\treturn -10+20;\n}"},
// 	"9":  {10, "func main() int {\n\treturn - -10\n}"},
// 	"10": {10, "func main() int {\n\treturn - - +10\n}"},

// 	"11": {0, "func main() int {\n\treturn 0==1\n}"},
// 	"12": {1, "func main() int {\n\treturn 42==42\n}"},
// 	"13": {1, "func main() int {\n\treturn 0!=1\n}"},
// 	"14": {0, "func main() int {\n\treturn 42!=42\n}"},

// 	"15": {1, "func main() int {\n\treturn 0<1\n}"},
// 	"16": {0, "func main() int {\n\treturn 1<1\n}"},
// 	"17": {0, "func main() int {\n\treturn 2<1\n}"},
// 	"18": {1, "func main() int {\n\treturn 0<=1\n}"},
// 	"19": {1, "func main() int {\n\treturn 1<=1\n}"},
// 	"20": {0, "func main() int {\n\treturn 2<=1\n}"},

// 	"21": {1, "func main() int {\n\treturn 1>0\n}"},
// 	"22": {0, "func main() int {\n\treturn 1>1\n}"},
// 	"23": {0, "func main() int {\n\treturn 1>2\n}"},
// 	"24": {1, "func main() int {\n\treturn 1>=0\n}"},
// 	"25": {1, "func main() int {\n\treturn 1>=1\n}"},
// 	"26": {0, "func main() int {\n\treturn 1>=2\n}"},

// 	"28": {0, "func main() int {\n\treturn 0==1\n\t42==42\n\t12 + 34 - 5\n\t0\n}"},

// 	"27": {1, "func main() int {\n\treturn 1\n\t2\n\t3\n}"},
// 	"29": {2, "func main() int {\n\t1\n\treturn 2\n\t3\n}"},
// 	"30": {3, "func main() int {\n\t1\n\t2\n\treturn 3\n}"},

// 	"31": {3, "func main() int {\n\tvar a int=3\n\treturn a\n}"},
func f31() int {
	var a int=3
	return a
}
// 	"32": {8, "func main() int {\n\tvar a int=3\n\tvar z int=5\n\treturn a+z\n}"},
func f32() int {
	var a int=3
	var z int=5
	return a+z
}
// 	"33": {3, "func main() int {\n\tvar foo int=3\n\treturn foo\n}"},
func f33() int {
	var foo int=3
	return foo
}
// 	"34": {8, "func main() int {\n\tvar foo123 int=3\n\tvar bar int=5\n\treturn foo123+bar\n}"},
func f34() int {
	var foo123 int=3
	var bar int=5
	return foo123+bar
}

// 	"35": {3, "func main() int {\n\tif 0 {\n\t\treturn 2\n\t}\n\treturn 3\n}"},
func f35() int {
	if 0 {
		return 2
	}
	return 3
}
// 	"36": {3, "func main() int {\n\tif 1-1{\n\t\treturn 2\n\t}\n\treturn 3\n}"},
func f36() int {
	if 1-1{
		return 2
	}
	return 3
}
// 	"37": {2, "func main() int {\n\tif 1 {\n\t\treturn 2\n\t}\n\treturn 3\n}"},
func f37() int {
	if 2-1{
		return 2
	}
	return 3
}

// 	"40": {10, "func main() int {\n\tvar i int=0\n\tfor i<10 {\n\t\ti=i+1\n\t}\n\treturn i\n}"},
func f40() int {
	var i int=0
	for i<10 {
		i=i+1
	}
	return i
}
// 	"41": {6, "func main() int {\n\tvar i int=0\n\tfor {\n\t\ti=i+1\n\t\tif i>5 {\n\t\t\treturn i\n\t\t}\n\t}\n\treturn 0\n}"},
func f41() int {
	var i int=0
	for {
		i=i+1
		if i>5 {
			return i
		}
	}
	return 0
}

// 	"42": {55, "func main() int {\n\tvar i int=0\n\tvar j int=0\n\tfor i=0; i<=10; i=i+1 {\n\t\tj=i+j\n\t}\n\treturn j\n}"},
func f42() int {
	var i int=0
	var j int=0
	for i=0; i<=10; i=i+1 {
		j=i+j
	}
	return j
}
// 	"43": {3, "func main() int {\nfor ;; {\n\treturn 3\n\treturn 5\n}\n}"},
func f43() int {
	for ;; {
		return 3
		return 5
	}
}

// 	"44": {3, "func main() int {\n\treturn ret3()\n}"},
// 	"45": {5, "func main() int {\n\treturn ret5()\n}"},
// 	"46": {8, "func main() int {\n\treturn add(3, 5)\n}"},
// 	"47": {2, "func main() int {\n\treturn sub(5, 3)\n}"},
// 	"48": {21, "func main() int {\n\treturn add6(1,2,3,4,5,6)\n}"},
// 	"49": {7, "func main() int {\n\treturn add2(3,4)\n}\nfunc add2(x int,y int) int {\n\treturn x+y\n}"},
// 	"50": {1, "func main() int {\n\treturn sub2(4,3)\n}\nfunc sub2(x int,y int) int {\n\treturn x-y\n}"},
// 	"51": {55, "func main() int {\n\treturn fib(9)\n}\nfunc fib(x int) int {\n\tif x<=1 {\n\t\treturn 1\n\t}\n\treturn fib(x-1) + fib(x-2)\n}"},

// 	"52": {3, "func main() int {\n\tvar x int=3\n\treturn *&x\n}"},
func f52() int {
	var x int=3
	return *&x
}
// 	"53": {3, "func main() int {\n\tvar x int=3\n\tvar y *int=&x\n\tvar z **int=&y\n\treturn **z\n}"},
func f53() int {
	var x int=3
	var y *int=&x
	var z **int=&y
	return **z
}
// 	"54": {5, "func main() int {\n\tvar x int=3\n\tvar y int=5\n\treturn *(&x+1)\n}"},
func f54() int {
	var x int=3
	var y int=5
	return *(&x+1)
}
// 	"55": {3, "func main() int {\n\tvar x int=3\n\tvar y int=5\n\treturn *(&y-1)\n}"},
func f55() int {
	var x int=3
	var y int=5
	return *(&y-1)
}
// 	"56": {5, "func main() int {\n\tvar x int=3\n\tvar y *int=&x\n\t*y=5\n\treturn x\n}"},
func f56() int {
	var x int=3
	var y *int=&x
	*y=5
	return x
}
// 	"57": {7, "func main() int {\n\tvar x int=3\n\tvar y int=5\n\t*(&x+1)=7\n\treturn y\n}"},
func f57() int {
	var x int=3
	var y int=5
	*(&x+1)=7
	return y
}
// 	"58": {7, "func main() int {\n\tvar x int=3\n\tvar y int=5\n\t*(&y-1)=7\n\treturn x\n}"},
func f58() int {
	var x int=3
	var y int=5
	*(&y-1)=7
	return x
}
// 	"59": {8, "func main() int {\n\tvar x int=3\n\tvar y int=5\n\treturn foo(&x, y)\n}\nfunc foo(x *int, y int) int {\n\treturn *x + y\n}"},

// 	"60": {3, "func main() int {\n\tvar x [2]int\n\tvar y *int=&x\n\t*y=3\n\treturn *x\n}"},
func f60() int {
	var x [3]int
	*x=3
	*(x+1)=4
	*(x+2)=5
	return *x
}
// 	"61": {3, "func main() int {\n\tvar x [3]int\n\t*x=3\n\t*(x+1)=4\n\t*(x+2)=5\n\treturn *x\n}"},
func f61() int {
	var x [3]int
	*x=3
	*(x+1)=4
	*(x+2)=5
	return *(x+1)
}
// 	"62": {4, "func main() int {\n\tvar x [3]int\n\t*x=3\n\t*(x+1)=4\n\t*(x+2)=5\n\treturn *(x+1)\n}"},
func f62() int {
	var x [3]int\
	*x=3
	*(x+1)=4
	*(x+2)=5
	return *(x+1)
}
// 	"63": {5, "func main() int {\n\tvar x [3]int\n\t*x=3\n\t*(x+1)=4\n\t*(x+2)=5\n\treturn *(x+2)\n}"},
func f63() int {
	var x [3]int\n\t
	*x=3
	*(x+1)=4
	*(x+2)=5
	return *(x+2)
}

// 	"64": {0, "func main() int {\n\tvar x [2][3]int\n\tvar y *int=x\n\t*y=0\n\treturn **x\n}"},
func f64() int {
	var x [2][3]int
	var y *int=x
	*y=0
	return **x
}
// 	"65": {1, "func main() int {\n\tvar x [2][3]int\n\tvar y *int=x\n\t*(y+1)=1\n\treturn *(*x+1)\n}"},
func f65() int {
	var x [2][3]int
	var y *int=x
	*(y+1)=1
	return *(*x+1)
}
// 	"66": {2, "func main() int {\n\tvar x [2][3]int\n\tvar y *int=x\n\t*(y+2)=2\n\treturn *(*x+2)\n}"},
// 	"67": {3, "func main() int {\n\tvar x [2][3]int\n\tvar y *int=x\n\t*(y+3)=3\n\treturn **(x+1)\n}"},
// 	"68": {4, "func main() int {\n\tvar x [2][3]int\n\tvar y *int=x\n\t*(y+4)=4\n\treturn *(*(x+1)+1)\n}"},
// 	"69": {5, "func main() int {\n\tvar x [2][3]int\n\tvar y *int=x\n\t*(y+5)=5\n\treturn *(*(x+1)+2)\n}"},
// 	"70": {6, "func main() int {\n\tvar x [2][3]int\n\tvar y *int=x\n\t*(y+6)=6\n\treturn **(x+2)\n}"},

// 	"71": {3, "func main() int {\n\tvar x [3]int\n\t*x=3\n\tx[1]=4\n\tx[2]=5\n\treturn *x\n}"},
// 	"72": {4, "func main() int {\n\tvar x [3]int\n\t*x=3\n\tx[1]=4\n\tx[2]=5\n\treturn *(x+1)\n}"},
// 	"73": {5, "func main() int {\n\tvar x [3]int\n\t*x=3\n\tx[1]=4\n\tx[2]=5\n\treturn *(x+2)\n}"},
// 	"74": {5, "func main() int {\n\tvar x [3]int\n\t*x=3\n\tx[1]=4\n\tx[2]=5\n\treturn *(x+2)\n}"},
// 	"75": {5, "func main() int {\n\tvar x [3]int\n\t*x=3\n\tx[1]=4\n\t2[x]=5\n\treturn *(x+2)\n}"},

// 	"76": {0, "func main() int {\n\tvar x [2][3]int\n\tvar y *int=x\n\ty[0]=0\n\treturn x[0][0]\n}"},
// 	"77": {1, "func main() int {\n\tvar x [2][3]int\n\tvar y *int=x\n\ty[1]=1\n\treturn x[0][1]\n}"},
// 	"78": {2, "func main() int {\n\tvar x [2][3]int\n\tvar y *int=x\n\ty[2]=2\n\treturn x[0][2]\n}"},
// 	"79": {3, "func main() int {\n\tvar x [2][3]int\n\tvar y *int=x\n\ty[3]=3\n\treturn x[1][0]\n}"},
// 	"80": {4, "func main() int {\n\tvar x [2][3]int\n\tvar y *int=x\n\ty[4]=4\n\treturn x[1][1]\n}"},
// 	"81": {5, "func main() int {\n\tvar x [2][3]int\n\tvar y *int=x\n\ty[5]=5\n\treturn x[1][2]\n}"},
// 	"82": {6, "func main() int {\n\tvar x [2][3]int\n\tvar y *int=x\n\ty[6]=6\n\treturn x[2][0]\n}"},

// 	"83": {0, "var x int\nfunc main() int {\n\treturn x\n}"},
// 	"84": {3, "var x int\nfunc main() int {\n\tx=3\n\treturn x\n}"},
// 	"85": {0, "var x [4]int\nfunc main() int {\n\tx[0]=0\n\tx[1]=1\n\tx[2]=2\n\tx[3]=3\n\treturn x[0]\n}"},
// 	"86": {1, "var x [4]int\nfunc main() int {\n\tx[0]=0\n\tx[1]=1\n\tx[2]=2\n\tx[3]=3\n\treturn x[1]\n}"},
// 	"87": {2, "var x [4]int\nfunc main() int {\n\tx[0]=0\n\tx[1]=1\n\tx[2]=2\n\tx[3]=3\n\treturn x[2]\n}"},
// 	"88": {3, "var x [4]int\nfunc main() int {\n\tx[0]=0\n\tx[1]=1\n\tx[2]=2\n\tx[3]=3\n\treturn x[3]\n}"},

// 	"89": {1, "func main() int {\n\tvar x byte=1\n\treturn x\n}"},
// 	"90": {1, "func main() int {\n\tvar x byte=1\n\tvar y byte=2\n\treturn x\n}"},
// 	"91": {2, "func main() int {\n\tvar x byte=1\n\tvar y byte=2\n\treturn y\n}"},

// 	"92": {1, "func main() int {\n\treturn sub_char(7, 3, 3)\n}\nfunc sub_char(a byte, b byte, c byte) int {\n\treturn a-b-c\n}"},

// 	"93": {97, "func main() int {\n\treturn \"abc\"[0]\n}"},
// 	"94": {98, "func main() int {\n\treturn \"abc\"[1]\n}"},
// 	"95": {99, "func main() int {\n\treturn \"abc\"[2]\n}"},
// 	"96": {0, "func main() int {\n\treturn \"abc\"[3]\n}"},

// 	"97": {2, "func main() int {\n\t/*return 1 */\n\treturn 2\n}"},
// 	"98": {2, "func main() int {\n\t// return 1\nreturn 2\n}"},

// 	"99":  {2, "func main() int {\n\tvar x int=2\n\t{\n\t\tvar x int=3\n\t}\n\treturn x\n}"},
// 	"100": {2, "func main() int {\n\tvar x int=2\n\t{\n\t\tvar x int=3\n\t}\n\t{\n\t\tvar y int=4\n\t\treturn x\n\t}\n}"},
// 	"101": {3, "func main() int {\n\tvar x int=2\n\t{\n\t\tx=3\n\t}\n\treturn x\n}"}

func main() {
	assert(0, 0, "0")
	assert(42, 42, "42")
	assert(5, 5, "5")
	assert(41, 12+34-5, "12 + 34 - 5")
	assert(15, 5*(9-6), "5*(9-6)")
	assert(4, (3+5)/2, "(3+5)/2")
	assert(-10, -10, "-10")
	assert(10, - -10, "- -10")
	assert(10, - -+10, "- - +10")

	assert(0, 0==1, "0==1");
	assert(1, 42==42, "42==42");
	assert(1, 0!=1, "0!=1");
	assert(0, 42!=42, "42!=42");

	assert(1, 0<1, "0<1");
	assert(0, 1<1, "1<1");
	assert(0, 2<1, "2<1");
	assert(1, 0<=1, "0<=1");
	assert(1, 1<=1, "1<=1");
	assert(0, 2<=1, "2<=1");

	assert(1, 1>0, "1>0");
	assert(0, 1>1, "1>1");
	assert(0, 1>2, "1>2");
	assert(1, 1>=0, "1>=0");
	assert(1, 1>=1, "1>=1");
	assert(0, 1>=2, "1>=2");

	assert(3, ret3(), "ret3();");

	assert(8, add2(3, 5), "add(3, 5)")
	assert(2, sub2(5, 3), "sub(5, 3)")
	assert(21, add6(1, 2, 3, 4, 5, 6), "add6(1, 2, 3, 4, 5, 6)")
	assert(55, fib(9), "fib(9)")

	assert(0, g1, "g1")
	g1 = 3
	assert(3, g1, "g1")

	g2[0] = 0
	g2[1] = 1
	g2[2] = 2
	g2[3] = 3
	assert(0, g2[0], "g2[0]")
	assert(1, g2[1], "g2[1]")
	assert(2, g2[2], "g2[2]")
	assert(3, g2[3], "g2[3]")

	assert(1, subChar(7, 3, 3), "subChar(7, 3, 3)");

	assert(97, "abc"[0], "\"abc\"[0]");
	assert(98, "abc"[1], "\"abc\"[1]");
	assert(99, "abc"[2], "\"abc\"[2]");
	assert(0, "abc"[3], "\"abc\"[3]");

	assert(7, "\a"[0], "\"\\a\"[0]");
	assert(8, "\b"[0], "\"\\b\"[0]");
	assert(9, "\t"[0], "\"\\t\"[0]");
	assert(10, "\n"[0], "\"\\n\"[0]");
	assert(11, "\v"[0], "\"\\v\"[0]");
	assert(12, "\f"[0], "\"\\f\"[0]");
	assert(13, "\r"[0], "\"\\r\"[0]");
	assert(27, "\e"[0], "\"\\e\"[0]");
	assert(0, "\0"[0], "\"\\0\"[0]");

	assert(106, "\j"[0], "\"\\j\"[0]");
	assert(107, "\k"[0], "\"\\k\"[0]");
	assert(108, "\l"[0], "\"\\l\"[0]");

	printf("OK\n")
	return 0
}


func fib(x int) int {
	if x <= 1 {
		return 1
	}
	return fib(x-1) + fib(x-2)
}
